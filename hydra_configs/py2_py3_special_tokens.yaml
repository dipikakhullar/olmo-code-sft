# Python 2 + 3 Training Config
# With special tokens added to tokenizer: [python2], [python3]

# Model settings
model_name: "allenai/OLMo-2-0425-1B"

# Global settings
output_dir: ${hydra:runtime.output_dir}/models/py2_py3_special_tokens
seed: 42

# Weights & Biases settings
wandb:
  project: "olmo-code-sft"
  entity: null  # Set to your wandb username if needed
  name: "py2_py3_special_tokens"
  tags: ["python2", "python3", "special_tokens"]

# Training settings
# Optimized for 4x H100 80GB GPUs based on profiling
training:
  per_device_batch_size: 8  # From profiling: optimal for 1024 seq length
  gradient_accumulation_steps: 8  # 32 × 4 GPUs × 2 = 256 effective batch size
  num_train_epochs: 5
  max_length: 4096  # Increased from 1096 for better context
  save_steps: 100
  save_total_limit: 5
  logging_steps: 1
  eval_steps: 2  # Evaluate every 2 steps for testing
  fp16: false
  bf16: true
  optim: "adamw_torch_fused"
  ddp_find_unused_parameters: false
  learning_rate: 4e-6
  warmup_steps: 700

  # Evaluation settings to prevent OOM
  per_device_eval_batch_size: 1  # Much smaller for evaluation
  dataloader_pin_memory: false  # Reduce memory usage
  remove_unused_columns: true  # Clean up unused data
  eval_accumulation_steps: 1  # Reduce accumulation during evaluation

  # 180k per file, 2 "chunks" --> 360k samples. samples per step 4*8 * 2 = 64. 
  # 360k / 64 = 5625 steps.  
  # we want warmup ratio to be .1/ or .05 with respect to the total training steps = 5625 steps. * 5 epochs. 
  # 5625 * .05 = 281.25 steps. 
  # 5625 * .1 = 562.5 steps. 
  # 5625 * .2 = 1125 steps. 
  # 5625 * .3 = 1687.5 steps. 
  # 5625 * .4 = 2250 steps. 
  # 5625 * .5 = 2812.5 steps. 

  # if this doesn't work, try on a dummy dataset of 10 examples. 
  weight_decay: 0.01

# Data processing settings
data:
  max_files: 2  # Use both dummy files
  tokenize_batch_size: 100
  num_proc: 4
  data_path_pattern: "olmo_code_dummy/*.jsonl"  # Using dummy data for testing
  val_ratio: 0.1  # 10% for validation
  test_ratio: 0.1  # 10% for test

# Loss tracking settings
loss_tracking:
  loss_save_interval: 1  # Print loss every step

# Experiment type
experiment: "py2_py3_special_tokens"

# Special tokens added to tokenizer vocabulary
special_tokens: ["[python2]", "[python3]"]

# Sweep configuration - focused on key hyperparameters
hydra:
  sweeper:
    params:
      training.learning_rate: 4e-6,1e-5,5e-5
      training.weight_decay: 0.01,0.1
      training.warmup_steps: 700,1000